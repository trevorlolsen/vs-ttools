{"version":3,"file":"extension.js","mappings":"2BAEA,MAAMA,EAAS,EAAQ,KACjBC,EAAU,EAAQ,IAQxB,SAASC,EAASC,GAejBA,EAAQC,cAAcC,KACrBL,EAAOM,SAASC,gBAAgB,gBAAgB,WAE/C,MAAMC,EAAmBP,EAAQQ,qBAAqBT,GAEtD,GAAgC,IAA5BQ,EAAiBE,OACpB,OAAO,EAERV,EAAOW,OAAOC,cAAcJ,GAAkBK,MAAK,SAAUC,QACrC,IAAZA,GACVb,EAAQc,UAAUD,EAIpB,GACD,KAIDX,EAAQC,cAAcC,KACrBL,EAAOM,SAASC,gBAAgB,kBAAkB,WAEjD,MAAMC,EAAmBP,EAAQe,sBAEjC,GAAgC,IAA5BR,EAAiBE,OACpB,OAAO,EAERV,EAAOW,OAAOC,cAAcJ,GAAkBK,MAAK,SAAUC,QACrC,IAAZA,GACVb,EAAQc,UAAUD,EAEpB,GACD,KAIDX,EAAQC,cAAcC,KACrBL,EAAOM,SAASC,gBAAgB,oBAAoB,WACnD,MAAMU,EAASjB,EAAOW,OAAOO,iBAC7BD,EAAOE,SAASC,OAAOP,MAAK,SAAUQ,GACrCrB,EAAOW,OAAOW,uBAAuB,QAAUL,EAAOE,SAASI,KAC/D,MAAMC,EAAM,oCAAsCP,EAAOE,SAASI,IAAIE,OAAOC,MAAM,MAAMC,KAAK,QAAU,OAGxG1B,EAAQ2B,cAAc5B,EAAQwB,EAFlB,eAIb,GAED,KAGDrB,EAAQC,cAAcC,KACrBL,EAAOM,SAASC,gBAAgB,oBAAoB,WAEnD,IAAIsB,EAAW5B,EAAQ6B,gCACvBC,QAAQC,IAAIH,GACZ7B,EAAOW,OAAOC,cAAciB,GAAUhB,MAAK,SAAUC,GAEpD,GAAI,QAASA,IAA8B,IAAnBA,EAAa,IACpC,IAAK,IAAImB,EAAI,EAAGA,EAAIJ,EAASnB,OAAQuB,IACuB,IAAvD,QAASJ,EAASI,KAA6B,IAAvBJ,EAASI,GAAQ,OAC7ChC,EAAQiC,eAAeL,EAASI,IAChCjC,EAAOW,OAAOW,uBAAuB,gBAAkBO,EAASI,GAAGE,gBAIpElC,EAAQiC,eAAepB,GACvBd,EAAOW,OAAOW,uBAAuB,gBAAkBR,EAAQqB,SAKjE,GAKD,IAGF,CAtGa,EAAQ,IAuGrBC,EAAQlC,SAAWA,EAKnBmC,EAAOD,QAAU,CAChBlC,WACAoC,WAJD,WAAwB,E,yMC7GjB,MAAMC,EAAO,UACdvC,EAAS,EAAQ,KACjBwC,EAAK,EAAQ,KACbC,EAAO,EAAQ,MACf,KAAEC,GAAS,EAAQ,KAIlB,SAASZ,IAGd,IAAIa,EAAe,GAEnB,IAAI,IAAIV,KAAKjC,EAAO4C,UAAUC,iBAAiB,CAC/C,IAAIC,EAAK9C,EAAO4C,UAAUC,iBAAiBZ,GAGzC,MAAMc,EAAgBN,EAAKd,KAAKmB,EAAGvB,IAAIE,OAAQ,iBAC/C,IAAII,EAAW,CAAG,EAQlB,IAAI,IAAImB,KAPJR,EAAGS,WAAWF,KAEhBlB,EAAWqB,KAAKC,MAAMX,EAAGY,aAAaL,EAAe,UAKzClB,EAAS,CACrB,IAAIwB,EAAWxB,EAASmB,GACxBK,EAAUC,MAAQR,EAAGP,KAAK,MAAOc,EAAUC,MAC3CD,EAAUE,OAASd,EAAKd,KAAKmB,EAAGvB,IAAIE,OAAQ4B,EAAUE,QACtDF,EAAUlB,SAAWM,EAAKd,KAAKmB,EAAGvB,IAAIE,OAAQ4B,EAAUlB,UACxDQ,EAAatC,KAAKgD,EAGpB,CAIH,CACC,OAAOV,CAIT,CAGO,SAASf,EAAc5B,EAAQwB,EAAKgC,GAoBzC,OAjBAd,EAAKlB,GAAK,CAACiC,EAAOC,EAAQC,KAEpBF,EACFzD,EAAOW,OAAOiD,iBAAiB,UAAUH,EAAMI,WAG7CF,EACF3D,EAAOW,OAAOiD,iBAAiB,WAAWD,MAG5C3D,EAAOW,OAAOW,uBAAuBkC,GACrCxD,EAAOW,OAAOW,uBAAuBoC,GAAO,KAMvC,CAET,CAwCA,IAAII,EAlCJ,WACE,MAAMC,EAAqB/D,EAAO4C,UAAUoB,iBAAiB,QAAQC,IAAI,aACzE,IAAIC,EAAuB,GACvBC,EAAW,GACf,GAAI3B,EAAGS,WAAWc,GAAqB,CAGrC,SAASK,EAAUC,GACjB,OAAOA,EAAQC,SAAS,QAC1B,CAEAJ,EALkB1B,EAAG+B,YAAYR,GAKES,OAAOJ,EAE5C,MACEpE,EAAOW,OAAOiD,iBAAiB,0CAGjC,IAAK,IAAIa,KAAeP,EAAsB,CAC5C,IAAIQ,EAAYR,EAAqBO,GAErC,MAAME,EAAiBlC,EAAKd,KAAKoC,EAAoBW,GAErD,GAAIlC,EAAGS,WAAW0B,GAAiB,CACjC,MAAMC,EAAW1B,KAAKC,MAAMX,EAAGY,aAAauB,EAAgB,SAC5DR,EAAS9D,KAAKuE,EAChB,CACF,CAGA,MADa,GAAGC,OAAOC,MAAM,GAAIX,EAEnC,CAIsBY,GAGf,SAAS/D,IACd,OAAO8C,CACT,CAwBO,SAASrD,EAAqBT,GAEnC,IAAIgF,EAtBN,SAA0BhF,GAExB,MAAMiB,EAASjB,EAAOW,OAAOO,iBACvB+D,EAAWhE,EAAOiE,UAAUC,OAC5BD,EAAYjE,EAAOiE,UACnBE,EAAiBnE,EAAOE,SAASkE,QAAQH,GAE/C,IAAII,EAAe,GACnB,GAAsB,IAAlBF,EACFE,EAAeF,MACV,CACL,MAAMG,EAAQtE,EAAOE,SAASqE,uBAAuBP,GAErDK,EADarE,EAAOE,SAASkE,QAAQE,GAAOE,aAE9C,CAEA,OAAOH,CAET,CAIaI,CAAiB1F,GAC5B+B,QAAQC,IAAIgD,GACZ,IAAIxE,EAAmB,GACvB,GAAU,IAAPwE,EAAU,CACX,MAAMW,EAAgB,IAAIC,OAAOZ,EAAM,KAEvC,IAAIb,EAAWnD,IAEfR,EAAmB,GAEnB,IAAK,IAAIyB,EAAI,EAAGA,EAAIkC,EAASzD,OAAQuB,IAC/B0D,EAAcE,KAAK1B,EAASlC,GAAGqB,QACjC9C,EAAiBH,KAAK8D,EAASlC,GAGrC,MACEzB,EAAmBQ,IAIrB,OAAOR,CAET,CAGA,MAAMsF,EAAuB,SAAUC,EAAKrF,EAAQsF,GAOlD,OANc,MAAVtF,IACAA,EAASV,EAAO4C,UAAUoB,iBAAiB,WAAWC,IAAI,WAEhD,MAAV+B,IACAA,EAAS,OAETD,EAAIrF,OAASA,EACNqF,EAAIE,UAAU,EAAGvF,EAASsF,EAAOtF,QAAUsF,EAE3CD,CAEb,EAcO,SAAShF,EAAUD,GAZ1B,IAAgCwC,EAAO4C,EAAP5C,EAaP,SAAWxC,EAAQwC,MAbL4C,EAaYpF,EAAQqF,KAX3CnG,EAAOW,OAAOyF,mBACxB,UACAN,EAAqBxC,GACrBtD,EAAOqG,WAAWC,OAClB,CAAEC,mBAAmB,IAEnBC,QAAQC,KAAOP,CAMvB,CAKO,SAAShE,EAAewE,GAE7B,IAAInD,EAASmD,EAAanD,OACtBpB,EAAWuE,EAAavE,SACxBwE,EAAYD,EAAaC,UACzBC,EAAkB,GACtB,MAAMC,EAAYC,EAAWvD,EAAOoD,GAGpC,IAAK,IAAI1E,EAAI,EAAGA,EAAI4E,EAAUnG,OAAQuB,IAAK,CACvC,IAAI8E,EAAeF,EAAU5E,IACO,IAAhCO,EAAGS,WAAW8D,IACdH,EAAgBvG,KAAKmC,EAAGY,aAAa2D,EAAc,QAG3D,CAIA,OAFAvE,EAAGwE,cAAc7E,EAAUyE,EAAgBjF,KAAK,QAEzC,CAET,CAEA,MAAMmF,EAAa,SAAUG,EAAKN,GAChC,IAAIO,EAAU,GAiBd,OAhBW1E,EAAG+B,YAAY0C,GACrBE,SAAQ,SAAUC,GACnBA,EAAO3E,EAAKd,KAAKsF,EAAKG,GACtB,IAAIC,EAAO7E,EAAG8E,SAASF,GACnBC,GAAQA,EAAKE,cAEbL,EAAUA,EAAQrC,OAAOiC,EAAWM,EAAMT,KAGd,OAAzBA,EAAUa,eAEHJ,EAAKI,cAAclD,SAASqC,EAAUa,iBAD9CN,EAAQ7G,KAAK+G,EAKvB,IACOF,CACT,C,8EChPO,MAAM3E,EAAO,OACdvC,EAAS,EAAQ,KAEvB,IACQyH,EADJC,GACID,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAEhB,SAASS,IAAOC,KAAKC,YAAcZ,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOW,OAAOZ,IAAMS,EAAGH,UAAYN,EAAEM,UAAW,IAAIG,EACnF,GAIOI,EAAkC,WACzC,SAASA,IACLH,KAAKI,KAAO,CAAC,IAAIC,EAAS,OAAQ,CAC1B,IAAIA,EAAS,OAAQ,CAAC,IAAIA,EAAS,UAAW,IAAIA,EAAS,SAAU,IAAIA,EAAS,aAClF,IAAIA,EAAS,MAAO,CAAC,IAAIA,EAAS,OAAQ,IAAIA,EAAS,MAAO,IAAIA,EAAS,UAEvF,CAYA,OAXAF,EAAiBP,UAAUU,YAAc,SAAUC,GAE/C,OADA9G,QAAQC,IAAI,eACL6G,CACX,EACAJ,EAAiBP,UAAUY,YAAc,SAAUD,GAE/C,OADA9G,QAAQC,IAAI,oBACI+G,IAAZF,EACOP,KAAKI,KAETG,EAAQG,QACnB,EACOP,CACX,CAnB4C,GAoBxCE,EAA0B,SAAUM,GAEpC,SAASN,EAASrF,EAAO0F,GACrBjH,QAAQC,IAAI,YACZ,IAAIkH,EAAQD,EAAOb,KAAKE,KAAMhF,OAAoByF,IAAbC,EAAyBhJ,EAAOmJ,yBAAyBC,KAC1FpJ,EAAOmJ,yBAAyBE,WAAaf,KAOjD,OANAY,EAAMF,SAAWA,EACjBE,EAAMI,QAAU,CACZA,QAAS,uBACTC,MAAO,GACPC,UAAW,CAAClG,IAET4F,CACX,CACA,OAbAxB,EAAUiB,EAAUM,GAabN,CACX,CAf6B,CAe3B3I,EAAO2I,S,uBCrDTtG,EAAOD,QAAUqH,QAAQ,S,uBCAzBpH,EAAOD,QAAUqH,QAAQ,gB,uBCAzBpH,EAAOD,QAAUqH,QAAQ,K,uBCAzBpH,EAAOD,QAAUqH,QAAQ,O,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBb,IAAjBc,EACH,OAAOA,EAAazH,QAGrB,IAAIC,EAASqH,EAAyBE,GAAY,CAGjDxH,QAAS,CAAC,GAOX,OAHA0H,EAAoBF,GAAUvH,EAAQA,EAAOD,QAASuH,GAG/CtH,EAAOD,OACf,CCrBAuH,EAAoBhC,EAAI,CAACvF,EAAS2H,KACjC,IAAI,IAAIC,KAAOD,EACXJ,EAAoBM,EAAEF,EAAYC,KAASL,EAAoBM,EAAE7H,EAAS4H,IAC5EnC,OAAOqC,eAAe9H,EAAS4H,EAAK,CAAEG,YAAY,EAAMlG,IAAK8F,EAAWC,IAE1E,ECNDL,EAAoBM,EAAI,CAACG,EAAKC,IAAUxC,OAAOK,UAAUC,eAAeC,KAAKgC,EAAKC,GCClFV,EAAoBW,EAAKlI,IACH,oBAAXmI,QAA0BA,OAAOC,aAC1C3C,OAAOqC,eAAe9H,EAASmI,OAAOC,YAAa,CAAEC,MAAO,WAE7D5C,OAAOqC,eAAe9H,EAAS,aAAc,CAAEqI,OAAO,GAAO,ECF9D,IAAIC,EAAsBf,EAAoB,K","sources":[".././src/extension.js",".././src/helpers.js",".././src/tree.js","../external commonjs \"vscode\"","../external node-commonjs \"child_process\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\r\n// Import the module and reference it with the alias vscode in your code below\r\nconst vscode = require('vscode');\r\nconst helpers = require('./helpers.js');\r\nconst tree = require('./tree.js');\r\n// this method is called when your extension is activated\r\n// your extension is activated the very first time the command is executed\r\n\r\n/**\r\n * @param {vscode.ExtensionContext} context\r\n */\r\nfunction activate(context) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// vscode.window.registerTreeDataProvider('nodeDependencies', new tree.TreeDataProvider());\r\n\r\n\t// vscode.commands.registerCommand('extension.nodeSelect', function (range) { \r\n\t// \tconsole.log('extension.nodeSelect');\r\n\t// \tconsole.log(range); \r\n\t// });\r\n\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand('vs.help.pull', function () {\r\n\r\n\t\t\tconst matched_keywords = helpers.get_matched_keywords(vscode);\r\n\r\n\t\t\tif (matched_keywords.length === 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvscode.window.showQuickPick(matched_keywords).then(function (my_pick) {\r\n\t\t\t\tif (typeof my_pick !== 'undefined') {\r\n\t\t\t\t\thelpers.open_help(my_pick);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t});\r\n\t\t})\r\n\t);\r\n\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand('vs.help.search', function () {\r\n\r\n\t\t\tconst matched_keywords = helpers.get_return_keywords();\r\n\r\n\t\t\tif (matched_keywords.length === 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvscode.window.showQuickPick(matched_keywords).then(function (my_pick) {\r\n\t\t\t\tif (typeof my_pick !== 'undefined') {\r\n\t\t\t\t\thelpers.open_help(my_pick);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t);\r\n\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand('vs.help.reformat', function () {\r\n\t\t\tconst editor = vscode.window.activeTextEditor;\r\n\t\t\teditor.document.save().then(function (result) {\r\n\t\t\t\tvscode.window.showInformationMessage('Run: ' + editor.document.uri);\r\n\t\t\t\tconst cmd = \"Rscript -e \\\"styler::style_file('\" + editor.document.uri.fsPath.split(\"\\\\\").join(\"\\\\\\\\\") + \"')\\\"\";\r\n\t\t\t\tconst msg = \"Run Finished\";\r\n\r\n\t\t\t\thelpers.run_shell_cmd(vscode, cmd, msg);\r\n\r\n\t\t\t});\r\n\r\n\t\t})\r\n\t);\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand('vs.help.collapse', function () {\r\n\r\n\t\t\tlet settings = helpers.workshop_all_project_settings();\r\n\t\t\tconsole.log(settings);\r\n\t\t\tvscode.window.showQuickPick(settings).then(function (my_pick) {\r\n\r\n\t\t\t\tif (\"all\" in my_pick && my_pick[\"all\"] === true) {\r\n\t\t\t\t\tfor (var i = 0; i < settings.length; i++) {\r\n\t\t\t\t\t\tif((\"all\" in settings[i] && settings[i][\"all\"] === true)===false){\r\n\t\t\t\t\t\thelpers.saver_collapse(settings[i]);\r\n\t\t\t\t\t\tvscode.window.showInformationMessage(\"Collapse to: \" + settings[i].out_path);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.saver_collapse(my_pick);\r\n\t\t\t\t\tvscode.window.showInformationMessage(\"Collapse to: \" + my_pick.out_path);\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\t\t})\r\n\t);\r\n\r\n}\r\nexports.activate = activate;\r\n\r\n// this method is called when your extension is deactivated\r\nfunction deactivate() { }\r\n\r\nmodule.exports = {\r\n\tactivate,\r\n\tdeactivate\r\n}\r\n","\r\nexport const name = 'helpers';\r\nconst vscode = require('vscode');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst { exec } = require(\"child_process\");\r\n\r\n\r\n\r\nexport function workshop_all_project_settings() {\r\n\r\n\r\n  let all_settings = [];\r\n\r\n  for(var i in vscode.workspace.workspaceFolders){\r\n\t\tvar wp = vscode.workspace.workspaceFolders[i];\r\n    \r\n\r\n    const collapse_json = path.join(wp.uri.fsPath, \"collapse.json\");\r\n    let settings = {  };\r\n    if (fs.existsSync(collapse_json)) {\r\n      \r\n      settings = JSON.parse(fs.readFileSync(collapse_json, 'utf8'));\r\n      \r\n\r\n    }\r\n\r\n    for(var si in settings){\r\n      let temp_item =settings[si];\r\n      temp_item.label = wp.name+\" | \"+ temp_item.label;\r\n      temp_item.in_dir = path.join(wp.uri.fsPath, temp_item.in_dir);\r\n      temp_item.out_path = path.join(wp.uri.fsPath, temp_item.out_path);\r\n      all_settings.push(temp_item);\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n\t}\r\n  return all_settings;\r\n\r\n \r\n\r\n}\r\n\r\n\r\nexport function run_shell_cmd(vscode, cmd, msg) {\r\n\r\n  \r\n  exec(cmd, (error, stdout, stderr) => {\r\n   \r\n    if (error) {\r\n      vscode.window.showErrorMessage(`error: ${error.message}`);\r\n      return;\r\n    }\r\n    if (stderr) {\r\n      vscode.window.showErrorMessage(`stderr: ${stderr}`);\r\n      return;\r\n    }\r\n    vscode.window.showInformationMessage(msg);\r\n    vscode.window.showInformationMessage(stdout);\r\n\r\n\r\n  \r\n  });\r\n \r\n  return true;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction load_key_words() {\r\n  const auto_complete_path = vscode.workspace.getConfiguration('help').get(\"directory\");\r\n  let array_files_filtered = [];\r\n  let keywords = [];\r\n  if (fs.existsSync(auto_complete_path)) {\r\n\r\n    let array_files = fs.readdirSync(auto_complete_path);\r\n    function checkWord(keyword) {\r\n      return keyword.endsWith('.json');\r\n    }\r\n\r\n    array_files_filtered = array_files.filter(checkWord);\r\n\r\n  } else {\r\n    vscode.window.showErrorMessage(\"Auto complete directory does not exist\");\r\n  }\r\n\r\n  for (let json_name_i in array_files_filtered) {\r\n    let json_name = array_files_filtered[json_name_i];\r\n\r\n    const json_name_full = path.join(auto_complete_path, json_name);\r\n\r\n    if (fs.existsSync(json_name_full)) {\r\n      const temp_obj = JSON.parse(fs.readFileSync(json_name_full, 'utf8'));\r\n      keywords.push(temp_obj);\r\n    }\r\n  }\r\n\r\n  var merged = [].concat.apply([], keywords);\r\n  return merged;\r\n}\r\n\r\n\r\n\r\nlet return_keywords = load_key_words();\r\n\r\n\r\nexport function get_return_keywords() {\r\n  return return_keywords;\r\n}\r\n\r\n\r\n\r\nfunction get_pattern_text(vscode) {\r\n\r\n  const editor = vscode.window.activeTextEditor;\r\n  const position = editor.selection.active;\r\n  const selection = editor.selection;\r\n  const selection_text = editor.document.getText(selection);\r\n\r\n  let pattern_text = \"\";\r\n  if (selection_text != \"\") {\r\n    pattern_text = selection_text;\r\n  } else {\r\n    const range = editor.document.getWordRangeAtPosition(position);\r\n    const word = editor.document.getText(range).toUpperCase();\r\n    pattern_text = word;\r\n  }\r\n\r\n  return pattern_text;\r\n\r\n}\r\n\r\nexport function get_matched_keywords(vscode) {\r\n\r\n  let word = get_pattern_text(vscode);\r\n  console.log(word);\r\n  let matched_keywords = [];\r\n  if(word !=\"\"){\r\n    const correct_regex = new RegExp(word, \"i\");\r\n\r\n    let keywords = get_return_keywords();\r\n\r\n    matched_keywords = [];\r\n\r\n    for (let i = 0; i < keywords.length; i++) {\r\n      if (correct_regex.test(keywords[i].label)) {\r\n        matched_keywords.push(keywords[i]);\r\n      }\r\n    }\r\n  }else{\r\n    matched_keywords = get_return_keywords();\r\n\r\n  }\r\n\r\n  return matched_keywords;\r\n\r\n}\r\n\r\n\r\nconst helper_text_truncate = function (str, length, ending) {\r\n  if (length == null) {\r\n      length = vscode.workspace.getConfiguration('helpTab').get(\"length\");\r\n  }\r\n  if (ending == null) {\r\n      ending = '...';\r\n  }\r\n  if (str.length > length) {\r\n      return str.substring(0, length - ending.length) + ending;\r\n  } else {\r\n      return str;\r\n  }\r\n};\r\n\r\nfunction helper_create_web_view(label, body) {\r\n  // Create and show a new webview\r\n  const panel = vscode.window.createWebviewPanel(\r\n      'sasHelp', // Identifies the type of the webview. Used internally\r\n      helper_text_truncate(label), // Title of the panel displayed to the user\r\n      vscode.ViewColumn.Beside, // Editor column to show the new webview panel in.\r\n      { enableCommandUris: true } // Webview options. More on these later.\r\n  );\r\n  panel.webview.html = body;\r\n\r\n}\r\n\r\nexport function open_help(my_pick) {\r\n  helper_create_web_view(\"Help: \" + my_pick.label, my_pick.help);\r\n}\r\n\r\n\r\n\r\n\r\nexport function saver_collapse(collpase_obj) {\r\n\r\n  let in_dir = collpase_obj.in_dir;\r\n  let out_path = collpase_obj.out_path;\r\n  let ends_with = collpase_obj.ends_with;\r\n  let string_builders = [];\r\n  const all_files = saver_walk(in_dir,ends_with);\r\n\r\n\r\n  for (let i = 0; i < all_files.length; i++) {\r\n      let current_path = all_files[i];\r\n      if (fs.existsSync(current_path) === true) {\r\n          string_builders.push(fs.readFileSync(current_path, 'utf8'));\r\n      }\r\n\r\n  }\r\n\r\n  fs.writeFileSync(out_path, string_builders.join('\\n'));\r\n\r\n  return true;\r\n\r\n}\r\n\r\nconst saver_walk = function (dir, ends_with) {\r\n  var results = [];\r\n  var list = fs.readdirSync(dir);\r\n  list.forEach(function (file) {\r\n      file = path.join(dir, file);\r\n      var stat = fs.statSync(file);\r\n      if (stat && stat.isDirectory()) {\r\n          /* Recurse into a subdirectory */\r\n          results = results.concat(saver_walk(file, ends_with));\r\n      } else {\r\n          /* Is a file */\r\n          if(ends_with.toLowerCase()==\"any\"){\r\n            results.push(file); \r\n          }else if (file.toLowerCase().endsWith(ends_with.toLowerCase())) { \r\n            results.push(file); \r\n          }\r\n      }\r\n  });\r\n  return results;\r\n}","export const name = 'tree';\r\nconst vscode = require('vscode');\r\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nexport var TreeDataProvider = /** @class */ (function () {\r\n    function TreeDataProvider() {\r\n        this.data = [new TreeItem('cars', [\r\n                new TreeItem('Ford', [new TreeItem('Fiesta'), new TreeItem('Focus'), new TreeItem('Mustang')]),\r\n                new TreeItem('BMW', [new TreeItem('320'), new TreeItem('X3'), new TreeItem('X5')])\r\n            ])];\r\n    }\r\n    TreeDataProvider.prototype.getTreeItem = function (element) {\r\n        console.log(\"getTreeItem\");\r\n        return element;\r\n    };\r\n    TreeDataProvider.prototype.getChildren = function (element) {\r\n        console.log(\"getChildren\");\r\n        if (element === undefined) {\r\n            return this.data;\r\n        }\r\n        return element.children;\r\n    };\r\n    return TreeDataProvider;\r\n}());\r\nvar TreeItem = /** @class */ (function (_super) {\r\n    __extends(TreeItem, _super);\r\n    function TreeItem(label, children) {\r\n        console.log(\"TreeItem\");\r\n        var _this = _super.call(this, label, children === undefined ? vscode.TreeItemCollapsibleState.None :\r\n            vscode.TreeItemCollapsibleState.Expanded) || this;\r\n        _this.children = children;\r\n        _this.command = {\r\n            command: 'extension.nodeSelect',\r\n            title: '',\r\n            arguments: [label]\r\n        };\r\n        return _this;\r\n    }\r\n    return TreeItem;\r\n}(vscode.TreeItem));","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["vscode","helpers","activate","context","subscriptions","push","commands","registerCommand","matched_keywords","get_matched_keywords","length","window","showQuickPick","then","my_pick","open_help","get_return_keywords","editor","activeTextEditor","document","save","result","showInformationMessage","uri","cmd","fsPath","split","join","run_shell_cmd","settings","workshop_all_project_settings","console","log","i","saver_collapse","out_path","exports","module","deactivate","name","fs","path","exec","all_settings","workspace","workspaceFolders","wp","collapse_json","si","existsSync","JSON","parse","readFileSync","temp_item","label","in_dir","msg","error","stdout","stderr","showErrorMessage","message","return_keywords","auto_complete_path","getConfiguration","get","array_files_filtered","keywords","checkWord","keyword","endsWith","readdirSync","filter","json_name_i","json_name","json_name_full","temp_obj","concat","apply","load_key_words","word","position","selection","active","selection_text","getText","pattern_text","range","getWordRangeAtPosition","toUpperCase","get_pattern_text","correct_regex","RegExp","test","helper_text_truncate","str","ending","substring","body","help","createWebviewPanel","ViewColumn","Beside","enableCommandUris","webview","html","collpase_obj","ends_with","string_builders","all_files","saver_walk","current_path","writeFileSync","dir","results","forEach","file","stat","statSync","isDirectory","toLowerCase","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","this","constructor","create","TreeDataProvider","data","TreeItem","getTreeItem","element","getChildren","undefined","children","_super","_this","TreeItemCollapsibleState","None","Expanded","command","title","arguments","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","o","defineProperty","enumerable","obj","prop","r","Symbol","toStringTag","value","__webpack_exports__"],"sourceRoot":""}