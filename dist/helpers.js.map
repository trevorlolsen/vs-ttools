{"version":3,"file":"helpers.js","mappings":"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","sources":["../external commonjs \"vscode\"","../external node-commonjs \"child_process\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object",".././src/helpers.js"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nexport const name = 'helpers';\r\nconst vscode = require('vscode');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst { exec } = require(\"child_process\");\r\n\r\n\r\n\r\nexport function workshop_all_project_settings() {\r\n\r\n\r\n  let all_settings = [];\r\n\r\n  for(var i in vscode.workspace.workspaceFolders){\r\n\t\tvar wp = vscode.workspace.workspaceFolders[i];\r\n    \r\n\r\n    const collapse_json = path.join(wp.uri.fsPath, \"collapse.json\");\r\n    let settings = {  };\r\n    if (fs.existsSync(collapse_json)) {\r\n      \r\n      settings = JSON.parse(fs.readFileSync(collapse_json, 'utf8'));\r\n      \r\n\r\n    }\r\n\r\n    for(var si in settings){\r\n      let temp_item =settings[si];\r\n      temp_item.label = wp.name+\" | \"+ temp_item.label;\r\n      temp_item.in_dir = path.join(wp.uri.fsPath, temp_item.in_dir);\r\n      temp_item.out_path = path.join(wp.uri.fsPath, temp_item.out_path);\r\n      all_settings.push(temp_item);\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n\t}\r\n  return all_settings;\r\n\r\n \r\n\r\n}\r\n\r\n\r\nexport function run_shell_cmd(vscode, cmd, msg) {\r\n\r\n  \r\n  exec(cmd, (error, stdout, stderr) => {\r\n   \r\n    if (error) {\r\n      vscode.window.showErrorMessage(`error: ${error.message}`);\r\n      return;\r\n    }\r\n    if (stderr) {\r\n      vscode.window.showErrorMessage(`stderr: ${stderr}`);\r\n      return;\r\n    }\r\n    vscode.window.showInformationMessage(msg);\r\n    vscode.window.showInformationMessage(stdout);\r\n\r\n\r\n  \r\n  });\r\n \r\n  return true;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction load_key_words() {\r\n  const auto_complete_path = vscode.workspace.getConfiguration('help').get(\"directory\");\r\n  let array_files_filtered = [];\r\n  let keywords = [];\r\n  if (fs.existsSync(auto_complete_path)) {\r\n\r\n    let array_files = fs.readdirSync(auto_complete_path);\r\n    function checkWord(keyword) {\r\n      return keyword.endsWith('.json');\r\n    }\r\n\r\n    array_files_filtered = array_files.filter(checkWord);\r\n\r\n  } else {\r\n    vscode.window.showErrorMessage(\"Auto complete directory does not exist\");\r\n  }\r\n\r\n  for (let json_name_i in array_files_filtered) {\r\n    let json_name = array_files_filtered[json_name_i];\r\n\r\n    const json_name_full = path.join(auto_complete_path, json_name);\r\n\r\n    if (fs.existsSync(json_name_full)) {\r\n      const temp_obj = JSON.parse(fs.readFileSync(json_name_full, 'utf8'));\r\n      keywords.push(temp_obj);\r\n    }\r\n  }\r\n\r\n  var merged = [].concat.apply([], keywords);\r\n  return merged;\r\n}\r\n\r\n\r\n\r\nlet return_keywords = load_key_words();\r\n\r\n\r\nexport function get_return_keywords() {\r\n  return return_keywords;\r\n}\r\n\r\n\r\n\r\nfunction get_pattern_text(vscode) {\r\n\r\n  const editor = vscode.window.activeTextEditor;\r\n  const position = editor.selection.active;\r\n  const selection = editor.selection;\r\n  const selection_text = editor.document.getText(selection);\r\n\r\n  let pattern_text = \"\";\r\n  if (selection_text != \"\") {\r\n    pattern_text = selection_text;\r\n  } else {\r\n    const range = editor.document.getWordRangeAtPosition(position);\r\n    const word = editor.document.getText(range).toUpperCase();\r\n    pattern_text = word;\r\n  }\r\n\r\n  return pattern_text;\r\n\r\n}\r\n\r\nexport function get_matched_keywords(vscode) {\r\n\r\n  let word = get_pattern_text(vscode);\r\n  console.log(word);\r\n  let matched_keywords = [];\r\n  if(word !=\"\"){\r\n    const correct_regex = new RegExp(word, \"i\");\r\n\r\n    let keywords = get_return_keywords();\r\n\r\n    matched_keywords = [];\r\n\r\n    for (let i = 0; i < keywords.length; i++) {\r\n      if (correct_regex.test(keywords[i].label)) {\r\n        matched_keywords.push(keywords[i]);\r\n      }\r\n    }\r\n  }else{\r\n    matched_keywords = get_return_keywords();\r\n\r\n  }\r\n\r\n  return matched_keywords;\r\n\r\n}\r\n\r\n\r\nconst helper_text_truncate = function (str, length, ending) {\r\n  if (length == null) {\r\n      length = vscode.workspace.getConfiguration('helpTab').get(\"length\");\r\n  }\r\n  if (ending == null) {\r\n      ending = '...';\r\n  }\r\n  if (str.length > length) {\r\n      return str.substring(0, length - ending.length) + ending;\r\n  } else {\r\n      return str;\r\n  }\r\n};\r\n\r\nfunction helper_create_web_view(label, body) {\r\n  // Create and show a new webview\r\n  const panel = vscode.window.createWebviewPanel(\r\n      'sasHelp', // Identifies the type of the webview. Used internally\r\n      helper_text_truncate(label), // Title of the panel displayed to the user\r\n      vscode.ViewColumn.Beside, // Editor column to show the new webview panel in.\r\n      { enableCommandUris: true } // Webview options. More on these later.\r\n  );\r\n  panel.webview.html = body;\r\n\r\n}\r\n\r\nexport function open_help(my_pick) {\r\n  helper_create_web_view(\"Help: \" + my_pick.label, my_pick.help);\r\n}\r\n\r\n\r\n\r\n\r\nexport function saver_collapse(collpase_obj) {\r\n\r\n  let in_dir = collpase_obj.in_dir;\r\n  let out_path = collpase_obj.out_path;\r\n  let ends_with = collpase_obj.ends_with;\r\n  let string_builders = [];\r\n  const all_files = saver_walk(in_dir,ends_with);\r\n\r\n\r\n  for (let i = 0; i < all_files.length; i++) {\r\n      let current_path = all_files[i];\r\n      if (fs.existsSync(current_path) === true) {\r\n          string_builders.push(fs.readFileSync(current_path, 'utf8'));\r\n      }\r\n\r\n  }\r\n\r\n  fs.writeFileSync(out_path, string_builders.join('\\n'));\r\n\r\n  return true;\r\n\r\n}\r\n\r\nconst saver_walk = function (dir, ends_with) {\r\n  var results = [];\r\n  var list = fs.readdirSync(dir);\r\n  list.forEach(function (file) {\r\n      file = path.join(dir, file);\r\n      var stat = fs.statSync(file);\r\n      if (stat && stat.isDirectory()) {\r\n          /* Recurse into a subdirectory */\r\n          results = results.concat(saver_walk(file, ends_with));\r\n      } else {\r\n          /* Is a file */\r\n          if(ends_with.toLowerCase()==\"any\"){\r\n            results.push(file); \r\n          }else if (file.toLowerCase().endsWith(ends_with.toLowerCase())) { \r\n            results.push(file); \r\n          }\r\n      }\r\n  });\r\n  return results;\r\n}"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","name","vscode","fs","path","exec","workshop_all_project_settings","all_settings","i","workspace","workspaceFolders","wp","collapse_json","join","uri","fsPath","settings","si","existsSync","JSON","parse","readFileSync","temp_item","label","in_dir","out_path","push","run_shell_cmd","cmd","msg","error","stdout","stderr","window","showErrorMessage","message","showInformationMessage","return_keywords","auto_complete_path","getConfiguration","array_files_filtered","keywords","checkWord","keyword","endsWith","readdirSync","filter","json_name_i","json_name","json_name_full","temp_obj","concat","apply","load_key_words","get_return_keywords","get_matched_keywords","word","editor","activeTextEditor","position","selection","active","selection_text","document","getText","pattern_text","range","getWordRangeAtPosition","toUpperCase","get_pattern_text","console","log","matched_keywords","correct_regex","RegExp","length","test","helper_text_truncate","str","ending","substring","open_help","my_pick","body","help","createWebviewPanel","ViewColumn","Beside","enableCommandUris","webview","html","saver_collapse","collpase_obj","ends_with","string_builders","all_files","saver_walk","current_path","writeFileSync","dir","results","forEach","file","stat","statSync","isDirectory","toLowerCase"],"sourceRoot":""}